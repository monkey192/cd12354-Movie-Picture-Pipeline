name: frontend-ci

on:
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]
    paths:
      - "starter/frontend/**"

env:
  WORKING_DIRECTORY: 'starter/frontend'

defaults:
  run:
    working-directory: 'starter/frontend'

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './starter/frontend/package-lock.json'
    - run: npm ci
    - run: npm run lint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './starter/frontend/package-lock.json'
    - run: npm ci
    - run: npm run test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: ${{ env.WORKING_DIRECTORY }}
        push: false
        provenance: false
